# Project: rid

TODO

WIP

    Test rid on a fresh install
        Then, release 1.0.0

DONEISH

    Imply forced update for packages with version 9999

    Improvements to manually-invoked caching

    Update install.sh

    Improve documentation
        examples written, now i just need to touch up DOCS.md

    make -qn still show news

    Add color config support

    Add a simscore threshold for searching

    Add a config file
        Ideas:
        - Toggle tarball removal on package removal
        - Set custom thread limits
        - Set search functionality threshold

    Merge stabs and linkval into rid
        Improve UX for both

    Add a search flag

    Rewrite mo in bash
        Needs more testing

    Repo syncing
        Needs more testing

    Custom repo support
        Needs more testing

    Add a flag '-L' for listing out-of-date packages
        and rename current -L to --validate-links

    Add a PM (PackageManager) struct

    Support -c <PACKAGE>

    Support -k <PACKAGE>

    Migrate from using $TARGET_USER to $TU

    Remove the option to adjust a few RID variables ($RIDBIN, $RIDSETS, etc.)

    Use git for syncing instead of the current system
        Covered by install.sh

    Deprecate rid-offline
        No longer really necessary to have two binaries because rid uses rustls anyways

    Edit corrupt tarball to check for existence first

    Wrapper bash script
        The alias and the script that calls the symlink work great :fire:

    Make -g only get the tarball if the latest version doesn't exist;
        Make -G always get the tarball

    dependency resolution tweaks (for i, u, r)
        adjust flags such that lowercase flags use default behavior and capital ones do the opposite

    Add a news system

    add installed_version field to json and Package so that the user can run rid -u @lfs, for instance

    Caching progress bar
        Needs more testing

    Add a variable for extra downloads instead of using raw

    Make downloads have progress bars

    add a check for corrupt tarballs (tar: this does not look like an archive) and make it attempt to redownload the tarball

    break up xorg-* into sets

    Revert to '-' instead of '_'

    avoid calling form_package() when unnecessary
        for instance, rid -l @glfs calls form_package() a bunch of times

    make rid auto-detect when it needs to cache and do so automatically and efficiently 

    add @all set

DROPPED

    Allow targetting of a package version
        really annoying to do because of how i've written rid

    Move $RIDSETS to rid-meta

    use lock files instead of a pkgs.json
        while i love this idea and think it offers certain benefits, it's gonna take a lot of effort to switch now

    progress bars for checking upstream
        I don't feel like doing it

    Add REPO argument to mint
        Done via an environment variable now

    Maybe add -m and -M for maintenance (along with $MDIR)
        I cba to do this

    Add support for parallel downloads
        I cba to do this

    Add -a flag for ask
        I don't feel like doing it lol

    Add package build flags (formatted as <package>#<feature>)
        Massive pain in the ass

    add * support
        bash expands it before rid can access it unless quoted

    Migrate RIDPKGSVERS to rid-meta
        RIDPKGSVERS has been deprecated

    Make raw check whether a file exists by default and work with -D
        this is rendered obsolete by down()

    Add -w flag for writing a metafile
        Not feasible

ROADMAP

    Features for rid-1.x.x:
        DONE
    
    Features for rid-2.x.x:
        add color to clap
        bash completions
        drop support for package definition within rid; have it be handled by a separate utility
        support for per-repo syncing
        lock files instead of repo-specific jsons
        more cohesive set and metafile system (where they're stored in the same repo)
        utilities for creating sets
        package uuids (if possible)
        proper build options support
        add an option to toggle rc filtering for upstream checks in the config

    Features for rid-3.x.x:
        allow for pre-install actions, such as avoiding extracting tarballs
        maybe subdivide instructions for m32, m64, patching, testing, etc.
        add a field for expected build time
            would require adding a way to calibrate SBUs
        allow hooks to better handle circular dependencies
            for example: calling `rid -fu nvidia` after the kernel is updated
        
