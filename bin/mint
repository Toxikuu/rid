#!/bin/bash

set -e

METAFILE="$2"

[ -z $RIDHOME ]       && { echo '$RIDHOME is unset'; exit 1; }
[ -z $RIDMETA ]       && { echo '$RIDHOME is unset'; exit 1; }
[ -z $RIDTMP ]        && { echo '$RIDHOME is unset'; exit 1; }
[ -z $RIDBUILDING ]   && { echo '$RIDHOME is unset'; exit 1; }
[ -z $RIDEXTRACTION ] && { echo '$RIDHOME is unset'; exit 1; }

function pre {
  bv=$(compgen -v)
  . "$RIDHOME/env" || { echo "Failed to source $RIDHOME/env"; exit 1; }
  . "$RIDMETA/$METAFILE" || die "Failed to source $RIDMETA/$METAFILE"
  av=$(compgen -v)

  rm -f $RIDTMP/failed
}

function cleanup {
  for var in $av; do
    if ! echo "$bv" | grep -q "^$var$"; then
      unset "$var"
    fi
  done
  rm -rf "$RIDBUILDING/$NAME-$VERS"
}

function ins {
  pushd "$RIDBUILDING/$NAME-$VERS" > /dev/null || die "Failed to enter build directory"

  echo "Installing $NAME-$VERS..."
  eval "$IDIR"
}

function rem {
  echo "Removing $NAME-$VERS..."
  eval "$RDIR"
}

pre
case $1 in
  i)
    ins || die "Install failure"
    popd > /dev/null
    cleanup
    ;;
  r)
    rem
    cleanup
    ;;
  u)
    if [ -z "$UDIR" ]; then
      echo "Updating $NAME (default)..."
      ins
    else
      pushd "$RIDBUILDING/$NAME-$VERS" > /dev/null || die "Failed to enter build directory"

      echo "Updating $NAME (custom)..."
      eval "$UDIR"
    fi
    cleanup
    ;;
  v)
    echo "NAME: $NAME"
    echo "VERS: $VERS"
    echo "LINK: $LINK"
    echo "DEPS: $DEPS"
    echo "UPST: $UPST"
    echo "SELE: $SELE"
    echo ""
    echo "IDIR: $IDIR"
    echo "RDIR: $RDIR"
    echo "UDIR: $UDIR"
    ;;
  *)
    echo "Invalid action: $2"
    echo "Valid actions:"
    echo "i - install"
    echo "r - remove"
    echo "u - update"
    echo "v - variables"
    exit 1
    ;;
esac
